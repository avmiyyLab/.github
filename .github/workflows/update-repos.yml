name: Update Repositories List

on:
  schedule:
    - cron: "0 0 * * *" # Выполнять каждый день в полночь
  workflow_dispatch: # Позволяет запускать вручную
  push:
    tags:
      - "v*" # Запускаем workflow только при пуше тегов, начинающихся на "v"

permissions:
  contents: write # Дает разрешение на чтение и запись содержимого репозитория (необходим для коммитов и пушей)

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install -y jq git

      - name: Fetch repository list
        id: fetch_repos
        run: |
          # Инициализируем пустой массив для репозиториев
          all_repos=()
          page=1

          while true; do
            # Получаем репозитории для текущей страницы
            repos=$(curl -s "https://api.github.com/users/vafeenLabs/repos?page=$page&per_page=100" | jq -r '.[] | select(.private == false) | .name')

            # Если репозиториев больше нет, выходим из цикла
            if [[ -z "$repos" ]]; then
              break
            fi

            # Добавляем репозитории в массив
            all_repos+=($repos)

            # Переходим к следующей странице
            ((page++))
          done

          # Сохраняем список в файл
          printf "%s\n" "${all_repos[@]}" > repos.txt

      - name: Generate repository list with header
        run: |
          set -e
          set -x

          export TZ=Europe/Moscow
          datetime=$(date "+%d.%m.%y %H:%M:%S MSK")

          # Создаем заголовок
          echo "# by [Vafeen](https://github.com/vafeen) ![Profile Views](https://komarev.com/ghpvc/?username=vafeenLabs&label=Profile%20views&color=0e75b6&style=flat)" > repo_list.md
          echo -e "\nThis is a cemetery of my projects and labs that I have ever done, put my soul and time into them, and time is the most valuable thing we have. I believe that this will help more than one person, at least, save time and energy, and maybe it will help someone understand something. In general, welcome!" >> repo_list.md
          echo "" >> repo_list.md
          echo "![](vafeen.jpg)" >> repo_list.md
          echo "" >> repo_list.md
          echo "## Repositories (UPD $datetime)" >> repo_list.md

          # Обработка семестров
          echo "### Semesters" >> repo_list.md
          temp_file=$(mktemp)

          while IFS= read -r repo; do
            if [[ "$repo" == *"-semester" ]]; then
              echo "Processing repository: $repo"
              # Извлекаем ВСЕ номера семестров через дефис
              semester_numbers=$(echo "$repo" | grep -oP '\d+(?=-semester)' | tr '\n' ' ')
              
              # Клонируем и получаем название
              rm -rf $repo
              if git clone --depth=1 https://github.com/vafeenLabs/$repo $repo; then
                if [ -f "$repo/README.md" ]; then
                  title=$(head -n 1 $repo/README.md | sed 's/^# //')
                  # Записываем для КАЖДОГО семестра отдельно
                  for semester in $semester_numbers; do
                    echo "$semester|$title|$repo" >> $temp_file
                  done
                fi
              fi
              rm -rf $repo
            fi
          done < repos.txt

          # Сортировка и группировка по семестрам
          current_semester=""
          sort -t'|' -k1,1n -k2,2 $temp_file | while IFS='|' read -r semester title repo; do
            if [[ "$semester" != "$current_semester" ]]; then
              echo -e "\n#### Semester $semester" >> repo_list.md
              current_semester=$semester
            fi
            # Проверяем дубликаты перед добавлением
            if ! grep -q "\[$title\]" repo_list.md; then
              echo "- [$title](https://github.com/vafeenLabs/$repo)" >> repo_list.md
            fi
          done

          rm -f $temp_file

          # Обработка остальных репозиториев
          echo "" >> repo_list.md
          echo "### Other Repositories" >> repo_list.md

          while IFS= read -r repo; do
            if [[ "$repo" != *"-semester" ]]; then
              echo "Processing repository: $repo"
              # Клонируем репозиторий
              rm -rf $repo
              if git clone --depth=1 https://github.com/vafeenLabs/$repo $repo; then
                if [ -f "$repo/README.md" ]; then
                  # Получаем первую строку без символа '#'
                  title=$(head -n 1 $repo/README.md | sed 's/^# //')
                  echo "- [$title](https://github.com/vafeenLabs/$repo)" >> repo_list.md
                else
                  echo "Skipping $repo: README.md not found"
                fi
              else
                echo "Failed to clone $repo"
              fi
              # Удаляем директорию после обработки
              rm -rf $repo
            fi
          done < repos.txt

      - name: Update profile/README.md
        run: |
          # Заменяем содержимое README.md на новое
          mv repo_list.md profile/README.md

      - name: Check for changes
        run: |
          if git diff --quiet; 
            then  echo "No changes detected. Skipping commit and push."
          else 
            git config --local user.name "GitHub Actions Bot"
            git config --local user.email "actions@github.com"
            git add profile/README.md
            git commit -m "Update repository list with header"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

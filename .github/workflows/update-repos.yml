name: Update Repositories List

on:
  schedule:
    - cron: "0 0 * * *"  # ежедневно в 00:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Get latest release asset (JAR)
        id: get-jar-info
        run: |
          RESPONSE=$(curl -s https://api.github.com/repos/vafeenLab/update-repos-kotlin/releases/latest)
          
          JAR_NAME=$(echo "$RESPONSE" | jq -r '.assets[] | select(.name | endswith(".jar")) | .name' | head -n1 | tr -d '\r\n ')
          JAR_URL=$(echo "$RESPONSE" | jq -r '.assets[] | select(.name | endswith(".jar")) | .browser_download_url' | head -n1 | tr -d '\r\n ')

          if [ -z "$JAR_NAME" ] || [ "$JAR_NAME" = "null" ]; then
            echo "::error::No JAR file found in the latest release"
            exit 1
          fi

          echo "Found JAR: [$JAR_NAME]"
          echo "Download URL: [$JAR_URL]"

          # Экспортируем БЕЗ лишних пробелов и с чистыми строками
          echo "jar_name=${JAR_NAME}" >> "$GITHUB_OUTPUT"
          echo "jar_url=${JAR_URL}" >> "$GITHUB_OUTPUT"

      - name: Download JAR from release
        run: |
          curl -L -o "${{ steps.get-jar-info.outputs.jar_name }}" "${{ steps.get-jar-info.outputs.jar_url }}"
          ls -l "${{ steps.get-jar-info.outputs.jar_name }}"
          echo "✅ JAR downloaded successfully"

      - name: Run the updater
        run: |
          java -jar "${{ steps.get-jar-info.outputs.jar_name }}" vafeenLab

      - name: Check for changes and push if needed
        run: |
          if git diff --quiet -- profile/README.md; then
            echo "No changes detected. Skipping commit."
          else
            git config --local user.name "Aleksei Nemtsev"
            git config --local user.email "shimanoee@yandex.ru"
            git add profile/README.md
            git commit -m "Update repository list with header"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}